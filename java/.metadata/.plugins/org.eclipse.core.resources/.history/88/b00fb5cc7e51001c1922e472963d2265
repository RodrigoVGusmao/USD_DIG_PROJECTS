package janelas;

import org.eclipse.swt.widgets.Dialog;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Shell;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.events.PaintEvent;
import org.eclipse.swt.events.PaintListener;
import org.eclipse.swt.graphics.GC;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.graphics.ImageData;
import org.eclipse.swt.graphics.ImageLoader;
import org.eclipse.swt.graphics.LineAttributes;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Decorations;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.layout.GridData;
import org.eclipse.wb.swt.SWTResourceManager;
import org.eclipse.swt.layout.FillLayout;

public class Velha extends Dialog {

	protected Object result;
	protected Shell shlVelha;
	private float globalSizeRel;

	/**
	 * Create the dialog.
	 * @param parent
	 * @param style
	 */
	public Velha(Shell parent, int style) {
		super(parent, style);
		setText("SWT Dialog");
	}

	/**
	 * Open the dialog.
	 * @return the result
	 */
	public Object open() {
		createContents();
		shlVelha.open();
		shlVelha.layout();
		Display display = getParent().getDisplay();
		while (!shlVelha.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
		return result;
	}

	/**
	 * Create contents of the dialog.
	 */
	private void createContents() {
		shlVelha = new Shell(getParent(), SWT.DIALOG_TRIM | SWT.RESIZE);
		shlVelha.setSize(300, 300);
		shlVelha.setText("velha");
		shlVelha.setLayout(new FillLayout(SWT.HORIZONTAL));
		
		Composite composite = new Composite(shlVelha, SWT.NONE);
		composite.setLayout(new GridLayout(3, true));
		
		Label lblCampo = new Label(composite, SWT.BORDER);
		lblCampo.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo.setImage(null);
		lblCampo.addPaintListener(new PaintListener() {

			@Override
			public void paintControl(PaintEvent e) {
				Label lbl = ((Label) e.getSource());
				Point pt = lbl.getSize();
				float sizeRel = (pt.x+pt.y)/2;
				drawX(e.gc, pt, Math.max(2*(int)sizeRel/100, 2), Math.max(2*(int)sizeRel/100, 2), Math.max(sizeRel/100, 1.f));
				if(sizeRel != globalSizeRel)
					lbl.redraw();
				globalSizeRel = sizeRel;
			}
			
		});
		lblCampo.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				Image img = SWTResourceManager.getImage(Velha.class, "/janelas/x.jpg");
				ImageData data = img.getImageData();
				Label lbl = ((Label) e.getSource());
				Point pt = lbl.getSize();
				data = data.scaledTo(pt.x, pt.y);
				Image newImage = new Image(img.getDevice(), data);
				lbl.setImage(newImage);
			}
		});
		
		Label lblCampo_1 = new Label(composite, SWT.BORDER);
		lblCampo_1.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_1.setImage(null);
		lblCampo_1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_2 = new Label(composite, SWT.BORDER);
		lblCampo_2.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_2.setImage(null);
		lblCampo_2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_3 = new Label(composite, SWT.BORDER);
		lblCampo_3.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_3.setImage(null);
		lblCampo_3.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_4 = new Label(composite, SWT.BORDER);
		lblCampo_4.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_4.setImage(null);
		lblCampo_4.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_5 = new Label(composite, SWT.BORDER);
		lblCampo_5.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_5.setImage(null);
		lblCampo_5.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_6 = new Label(composite, SWT.BORDER);
		lblCampo_6.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_6.setImage(null);
		lblCampo_6.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_7 = new Label(composite, SWT.BORDER);
		lblCampo_7.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_7.setImage(null);
		lblCampo_7.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});
		
		Label lblCampo_8 = new Label(composite, SWT.BORDER);
		lblCampo_8.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		lblCampo_8.setImage(null);
		lblCampo_8.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseUp(MouseEvent e)
			{
				
			}
		});

	}
	
	private void drawX(GC gc, Point pt, int x, int y, float width)
	{
		gc.setLineAttributes(new LineAttributes(width));
		gc.drawLine(x, y, pt.x-x, pt.y-y);
	}
}
